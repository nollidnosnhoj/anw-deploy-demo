events {}

http {

    # public endpoints

    server {
      server_name nuts-8080;
      listen      443 ssl;
      ssl_certificate              /etc/nginx/ssl/certificate-stable.pem;
      ssl_certificate_key          /etc/nginx/ssl/certificate-stable.key;
      ssl_client_certificate       /etc/nginx/ssl/truststore-stable.pem;
      ssl_verify_depth          1;

      location /iam {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /oauth {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /.well-known {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /statuslist {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }
    }

    # internal endpoints

    server {
      server_name nuts-8081
      listen 80;

      location /internal {
        proxy_pass http://nuts-node:8081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /status {
        proxy_pass http://nuts-node:8081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /status/diagnostics: {
        proxy_pass http://nuts-node:8081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /metrics {
        proxy_pass http://nuts-node:8081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }

      location /health {
        proxy_pass http://nuts-node:8081;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }
    }

    # Legacy

    server {
      server_name nuts-n2n;
      listen                    443 ssl;
      ssl_certificate              /etc/nginx/ssl/certificate-stable.pem;
      ssl_certificate_key          /etc/nginx/ssl/certificate-stable.key;
      ssl_client_certificate       /etc/nginx/ssl/truststore-stable.pem;
      ssl_verify_client         on;
      ssl_verify_depth          1;

      location /n2n {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }
    }

    server {
      server_name nuts-public;
      listen                    443 ssl;
      ssl_certificate              /etc/nginx/ssl/certificate-stable.pem;
      ssl_certificate_key          /etc/nginx/ssl/certificate-stable.key;
      ssl_client_certificate       /etc/nginx/ssl/truststore-stable.pem;

      location /public {
        proxy_pass http://nuts-node:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }
    }

    server {
      server_name nuts-grpc;
      listen                    5555 ssl;
      http2                     on;
      ssl_certificate              /etc/nginx/ssl/certificate-stable.pem;
      ssl_certificate_key          /etc/nginx/ssl/certificate-stable.key;
      ssl_client_certificate       /etc/nginx/ssl/truststore-stable.pem;
      ssl_verify_depth          1;

      location / {
        # During synchronization of a new Nuts node it is possible that the gRPC stream contains messages larger than NGINX is willing to accept.
        # The following config disables buffering and increases the max. message a client can send to some sanely large number.
        # If not configured, NGINX will drop the connection when syncing lots of transactions at once.
        proxy_buffering off;
        client_max_body_size 128m;

        grpc_pass grpc://nuts-node:5555;
        grpc_set_header X-SSL-CERT $ssl_client_escaped_cert;        # add peer's SSL cert
        grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # for correct IP logging
      }
    }
}
